{"version":3,"file":"lib_index_js.5fee0ff40a978d6fd6d3.js","mappings":";;;;;;;;;;;;;AAAO;;;;;;;;;;;;;;;;;;;;;;ACAwD;AACQ;AAC9B;AACM;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAe;AAC9B,eAAe,yEAAgB;AAC/B;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,2BAA2B,gEAAc,GAAG,SAAS;AACrD;AACA;AACA;AACA;AACA,qBAAqB,wDAAgB;AACrC;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,0BAA0B,+BAA+B;AACzD;AACA;AACA,iEAAe,MAAM,EAAC","sources":["webpack://@maap-jupyterlab/ades-metrics-visualization-jupyter-extension/./lib/constants.js","webpack://@maap-jupyterlab/ades-metrics-visualization-jupyter-extension/./lib/index.js"],"sourcesContent":["export const LOCAL_KIBANA_URL = \"http://127.0.0.1:5601/app/kibana#/dashboard/b36164e0-084a-11ed-b94b-3fac263ccc8c?embed=true&_g=(refreshInterval%3A(pause%3A!t%2Cvalue%3A0)%2Ctime%3A(from%3Anow%2Fw%2Cto%3Anow%2Fw))\";\n","import { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { ICommandPalette, MainAreaWidget } from '@jupyterlab/apputils';\nimport { Widget } from '@lumino/widgets';\nimport { LOCAL_KIBANA_URL } from './constants';\n/**\n * Initialization data for the ades-metrics-visualization extension.\n */\nconst plugin = {\n    id: 'ades-metrics-visualization:plugin',\n    autoStart: true,\n    requires: [ICommandPalette],\n    optional: [ISettingRegistry],\n    activate: (app, palette, settingRegistry) => {\n        console.log('JupyterLab extension ades-metrics-visualization is activated!');\n        const content = new Widget();\n        content.addClass('ades-widget');\n        const widget = new MainAreaWidget({ content });\n        let div = document.createElement('div');\n        div.classList.add('iframe-widget');\n        let iframe = document.createElement('iframe');\n        iframe.id = 'iframeid';\n        iframe.src = LOCAL_KIBANA_URL;\n        div.appendChild(iframe);\n        content.node.appendChild(div);\n        widget.id = 'jupyter-ades';\n        widget.title.label = 'ADES Metrics';\n        widget.title.closable = true;\n        const { commands } = app;\n        const command = 'ades:open';\n        commands.addCommand(command, {\n            label: 'ADES Metrics Visualization',\n            execute: () => {\n                if (!widget.isAttached) {\n                    // Attach the widget to the main work area if it's not there\n                    app.shell.add(widget, 'main');\n                }\n                // Activate the widget\n                app.shell.activateById(widget.id);\n            },\n        });\n        if (settingRegistry) {\n            settingRegistry\n                .load(plugin.id)\n                .then(settings => {\n                console.log('ades-metrics-visualization settings loaded:', settings.composite);\n            })\n                .catch(reason => {\n                console.error('Failed to load settings for ades-metrics-visualization.', reason);\n            });\n        }\n        palette.addItem({ command, category: 'Tutorial' });\n    }\n};\nexport default plugin;\n"],"names":[],"sourceRoot":""}